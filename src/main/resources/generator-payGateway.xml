<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 设置mysql驱动路径 -->
    <classPathEntry location="/Users/lscm/.m2/repository/mysql/mysql-connector-java/5.1.35/mysql-connector-java-5.1.35.jar" />
    <!-- 此处指定生成针对MyBatis3的DAO -->
    <context id="Mysql" targetRuntime="MyBatis3">
        <!-- 需求特殊转换使用可以增加相应的plugin -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="com.nextxworkroom.mybatis.generator.plugin.CommonPlugin" />
        <!-- jdbc连接信息 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://172.16.18.172:3306/paytest" userId="root" password="izene123" />
        <!-- 生成vo对象  原生为targetProject="src/main/java" -->
        <javaModelGenerator targetPackage="com.nextxworkroom.payment.gateway.model" targetProject="${targetProject}" />
        <!-- 生成用于查询的Example对象 -->
        <sqlMapGenerator targetPackage="com.nextxworkroom.payment.gateway.dao.mapper" targetProject="${targetProject}" />
        <!-- 生成DAO的类文件以及配置文件 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.nextxworkroom.payment.gateway.dao.mapper" targetProject="${targetProject}" />
        <!-- 想要生成的数据库表,自动化工具会根据该表的结构生成相应的vo对象 -->
        <table schema="payGateway" tableName="T_PAYMENT_ORDER" domainObjectName="PaymentOrder" />
    </context>
</generatorConfiguration>